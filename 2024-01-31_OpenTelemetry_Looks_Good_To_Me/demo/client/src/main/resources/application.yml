debug: true

server:
  port: 8080
  # required for grafana jvm dashboard
  # https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.2-Release-Notes#tomcats-mbean-registry
  tomcat:
    mbeanregistry:
      enabled: true

management:
  opentelemetry:
    resource-attributes: 
      deployment.environment: ${deployment.environment}
      host.name: '${host.name}'
      service.name: '${service.name}'
      service.namespace: '${service.namespace}'
      service.version: '@project.version@'

  otlp:
    logging:
      enabled: true
      endpoint: http://otelcontribcol-gateway:4318/v1/logs
      # endpoint: http://192.168.33.40:4318/v1/logs
    # https://docs.micrometer.io/micrometer/reference/implementations/otlp.html
    metrics:
      export:
        enabled: true
        step: 10s
        url: http://mimir:9009/otlp/v1/metrics
        # url: https://prometheus-prod-24-prod-eu-west-2.grafana.net/otlp/v1/metrics
        # headers:
        #   Authorization: Basic ####

  metrics:
    tags:
      deployment.environment: '${deployment.environment}'
      host.name: '${host.name}'
      service:
        name: '${service.name}'
        namespace: '${service.namespace}'
        version: '@project.version@'
    # https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/metrics/sdk.md#explicit-bucket-histogram-aggregation
    # https://docs.micrometer.io/micrometer/reference/implementations/otlp.html
    distribution:
      # percentiles-histogram:
      #   all: true
      # https://opentelemetry.io/docs/specs/semconv/http/http-metrics/#metric-httpserverrequestduration
      slo:
        http: 5, 10, 25, 50, 75, 100, 250, 500, 750, 1000, 2500, 5000, 7500, 10000
        jvm: 5, 10, 25, 50, 75, 100, 250, 500, 750, 1000, 2500, 5000, 7500, 10000
      
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
    jmx:
      exposure:
        include: '*'